# Set to the MySQL user you want to connect to; 'root' is the default user.
spring.datasource.username=root
spring.datasource.password=[database-user-password]
spring.cloud.gcp.sql.database-name=[database-name]
# This value is formatted in the form: [gcp-project-id]:[region]:[instance-name]
spring.cloud.gcp.sql.instance-connection-name=[instance-connection-name]
# So app starts despite "table already exists" errors.
spring.datasource.continue-on-error=true
# Enforces database initialization
spring.datasource.initialization-mode=always
#spring.cloud.gcp.project-id=
#spring.cloud.gcp.credentials.location=file:/path/to/service-account.json
spring.jpa.database-platform=org.hibernate.dialect.MySQL57Dialect
spring.jpa.show-sql=true
# NOTE: ddl-auto=create is set for convenience, to fully create database during the start.
# Please change it to "update" if you prefer to not reset database during start.
spring.jpa.hibernate.ddl-auto=create